{"ast":null,"code":"import consumer from \"./consumer\";\ndocument.addEventListener('turbolinks:load', function () {\n  var roomElement = document.querySelector(\"#room-id\");\n  var roomId = Number(roomElement.getAttribute('data-room-id'));\n  consumer.subscriptions.create({\n    channel: \"RoomChannel\",\n    room_id: roomId\n  }, {\n    connected: function connected() {\n      console.log(\"connected to \".concat(roomId)); // Called when the subscription is ready for use on the server\n    },\n    disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n    },\n    received: function received(data) {\n      console.log(data);\n      var messagesContainer = document.querySelector('#messages');\n      var SendButton = document.querySelector('#send');\n      var messageInput = document.querySelector(\"#message-input\");\n      messagesContainer.innerHTML = messagesContainer.innerHTML + data.html;\n      messageInput.value = \"\";\n      SendButton.disabled = false;\n      console.log('send');\n      var messageContainer = document.querySelector('#messages');\n      messageContainer.scrollTop = messageContainer.scrollHeight; // Called when there's incoming data on the websocket for this channel\n    }\n  });\n});","map":{"version":3,"sources":["/home/lehoax/Documents/thp/helj/HelJ/app/javascript/channels/room_channel.js"],"names":["consumer","document","addEventListener","roomElement","querySelector","roomId","Number","getAttribute","subscriptions","create","channel","room_id","connected","console","log","disconnected","received","data","messagesContainer","SendButton","messageInput","innerHTML","html","value","disabled","messageContainer","scrollTop","scrollHeight"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEAC,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,EAA4C,YAAI;AAC/C,MAAMC,WAAW,GAAGF,QAAQ,CAACG,aAAT,CAAuB,UAAvB,CAApB;AACA,MAAMC,MAAM,GAAGC,MAAM,CAACH,WAAW,CAACI,YAAZ,CAAyB,cAAzB,CAAD,CAArB;AACAP,EAAAA,QAAQ,CAACQ,aAAT,CAAuBC,MAAvB,CAA8B;AAAEC,IAAAA,OAAO,EAAC,aAAV;AAAwBC,IAAAA,OAAO,EAACN;AAAhC,GAA9B,EAAuE;AACtEO,IAAAA,SADsE,uBAC1D;AACXC,MAAAA,OAAO,CAACC,GAAR,wBAA4BT,MAA5B,GADW,CAEV;AACD,KAJqE;AAMtEU,IAAAA,YANsE,0BAMvD,CACb;AACD,KARqE;AAUtEC,IAAAA,QAVsE,oBAU7DC,IAV6D,EAUvD;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACA,UAAMC,iBAAiB,GAAGjB,QAAQ,CAACG,aAAT,CAAuB,WAAvB,CAA1B;AACA,UAAMe,UAAU,GAAGlB,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAAnB;AACA,UAAMgB,YAAY,GAAGnB,QAAQ,CAACG,aAAT,CAAuB,gBAAvB,CAArB;AACAc,MAAAA,iBAAiB,CAACG,SAAlB,GAA8BH,iBAAiB,CAACG,SAAlB,GAA8BJ,IAAI,CAACK,IAAjE;AACAF,MAAAA,YAAY,CAACG,KAAb,GAAoB,EAApB;AACAJ,MAAAA,UAAU,CAACK,QAAX,GAAsB,KAAtB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAMW,gBAAgB,GAAGxB,QAAQ,CAACG,aAAT,CAAuB,WAAvB,CAAzB;AACAqB,MAAAA,gBAAgB,CAACC,SAAjB,GAA6BD,gBAAgB,CAACE,YAA9C,CAVc,CAWb;AACD;AAtBqE,GAAvE;AAwBA,CA3BD","sourcesContent":["import consumer from \"./consumer\"\n\ndocument.addEventListener('turbolinks:load',()=>{\n\tconst roomElement = document.querySelector(\"#room-id\")\n\tconst roomId = Number(roomElement.getAttribute('data-room-id'))\n\tconsumer.subscriptions.create({ channel:\"RoomChannel\",room_id:roomId}, {\n\t\tconnected() {\n\t\t\tconsole.log(`connected to ${roomId}`)\n\t\t  // Called when the subscription is ready for use on the server\n\t\t},\n\t  \n\t\tdisconnected() {\n\t\t  // Called when the subscription has been terminated by the server\n\t\t},\n\t  \n\t\treceived(data) {\n\t\t\tconsole.log(data)\n\t\t\tconst messagesContainer = document.querySelector('#messages')\n\t\t\tconst SendButton = document.querySelector('#send')\n\t\t\tconst messageInput = document.querySelector(\"#message-input\")\n\t\t\tmessagesContainer.innerHTML = messagesContainer.innerHTML + data.html\n\t\t\tmessageInput.value =\"\"\n\t\t\tSendButton.disabled = false\n\t\t\tconsole.log('send')\n\t\t\tconst messageContainer = document.querySelector('#messages')\n\t\t\tmessageContainer.scrollTop = messageContainer.scrollHeight\n\t\t  // Called when there's incoming data on the websocket for this channel\n\t\t}\n\t  });\n})\n\n"]},"metadata":{},"sourceType":"module"}